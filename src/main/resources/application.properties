# command to find port used: C:\WINDOWS\system32>netstat -ao |find /i "listening"
# Tomcat Server Port, use can configure any port
server.port = 8090
#server.contextPath=/mkyong

# DataSource and Connection Pool are configured in application.properties file using prefix spring.datasource. Spring boot uses javax.sql.DataSource interface to configure 
# DataSource. Suppose we want to integrate MySQL then we will configure DataSource as following.
# application.properties

#spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://localhost:3306/concretepage
#spring.datasource.username=root
#spring.datasource.password= 

spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=TESTDB
spring.datasource.password=TESTDB
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver

#  Connection Pool Configuration
# We configure tomcat connection pooling as following. 
# Number of ms to wait before throwing an exception if no connection is available.
spring.datasource.tomcat.max-wait=10000
# Maximum number of active connections that can be allocated from this pool at the same time.
spring.datasource.tomcat.max-active=50
spring.datasource.tomcat.max-idle=20
spring.datasource.tomcat.min-idle=15

## actuator properties
endpoints.beans.id=springbeans
endpoints.beans.sensitive=false
endpoints.beans.enabled=true
endpoints.health.enabled=true
 	
endpoints.metrics.sensitive=false
management.security.enabled=false

#management.security.enabled=true
#security.basic.enabled=true
#security.user.name=admin
#security.user.password=admin

logging.level.org=INFO

spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

## server will not start aumatically now
spring.devtools.restart.enabled = false 

spring.cloud.config.server.git.uri= https://github.com/kaushleshtripathi/spring-cloud-config-server-repo.git
